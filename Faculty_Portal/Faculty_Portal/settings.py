"""
Django settings for Faculty_Portal project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Cloudinary configuration
import cloudinary
import cloudinary.uploader
import cloudinary.api

cloudinary.config(
    cloud_name = os.environ.get('CLOUDINARY_CLOUD_NAME'),
    api_key = os.environ.get('CLOUDINARY_API_KEY'),
    api_secret = os.environ.get('CLOUDINARY_API_SECRET'),
    secure = True
)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'unsafe-secret-key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = ['.onrender.com', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'cloudinary',
    'cloudinary_storage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'Faculty_Portal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Faculty_Portal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL')
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Email configuration using SendGrid API (not SMTP)
EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"

# Your SendGrid API key from environment variables
SENDGRID_API_KEY = os.environ.get("SENDGRID_API_KEY")

# Optional but recommended settings
SENDGRID_SANDBOX_MODE_IN_DEBUG = False  # Set True if you just want to test without sending emails
SENDGRID_ECHO_TO_STDOUT = True          # Prints email content to logs for debugging

# Default sender email (must match your verified sender in SendGrid)
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")



# Use Cloudinary for media storage
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_URL = '/media/'

AUTH_USER_MODEL = 'accounts.FacultyUser'
LOGIN_URL = '/login/'


DEAN_EMAIL = ['shamik.tiwari@iilm.edu']

CLUSTER_HEAD_EMAIL = ['amar.shukla@iilm.edu', 'umang.garg@iilm.edu', 'akshat.agrawal@iilm.edu']

FACULTY_EMAIL = ['puja.acharya@iilm.edu', 'pallavi.pandey@iilm.edu', 'sonam.lata@iilm.edu', 'pooja.nagpal@iilm.edu', 'aarti.chugh@iilm.edu', 'sapna.arora@iilm.edu', 'neha.bansal@iilm.edu', 'samridhi.singhal@iilm.edu',  'preeti.mehta@iilm.edu', 'jayati.tripathi@iilm.edu', 'rahul.thakur@iilm.edu', 'aarti.tewari@iilm.edu', 'naved.ahmad@iilm.edu', 'shagun.panghal@iilm.edu', 'abhishek.toofani@iilm.edu', 'amit.kumar.tiwari@iilm.edu', 'tanu.gupta@iilm.edu', 'vikas.jayswal@iilm.edu', 'puneet.bawa@iilm.edu', 'vardaan.pajnoo@iilm.edu', 'vishwa.prakash@iilm.edu', 'devraj.sharma@iilm.edu', 'anurag.jain@iilm.edu', 'aashish.kaushik@iilm.edu', 'rudraksh.sachdeva.ug24@iilm.edu']

# settings.py
X_FRAME_OPTIONS = 'SAMEORIGIN' # To allow embedding in iframes from the same origin

